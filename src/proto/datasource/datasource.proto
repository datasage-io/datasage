syntax = "proto3";
 
package datasource;
 
option go_package = "github.com/datasage-io/datasage/proto/datasource";

 

//RPC Service 
service Datasource {
   rpc AddDatasource ( addRequest ) returns (  addResponse );
   rpc ListDatasource ( listRequest ) returns (  listResponse );
   rpc DeleteDatasource ( deleteRequest ) returns (  deleteResponse );
   rpc LogDatasource ( logRequest ) returns (  logResponse );
   rpc Scan ( scanRequest ) returns ( scanResponse );
   rpc GetStatus ( statusRequest ) returns ( statusResponse );
   rpc GetRecommendedPolicy ( recommendedpolicyRequest) returns ( recommendedpolicyResponse );
   rpc ApplyPolicy ( applyPolicyRequest ) returns (  applyPolicyResponse );
}

//Request for Create Datasource 
message addRequest {
   string     data_domain  = 1;  
   string     name         = 2;
   string     description  = 3;
   string     type         = 4;
   string     version      = 5;     
   string     host         = 7;  
   string     port         = 8;
   string     user         = 9;
   string     password     = 10;
}

//addResponse - Response for add datasource 
message addResponse {
   string statusCode  = 1;
   string message     = 2;
}

//listRequest - Request for List Datasource
message listRequest {
   string name                 = 1;
   repeated string data_domain = 2;
   repeated string type        = 3;
   int64 first                 = 4;
   int64 last                  = 5;
   int64 limit                 = 6;
   bool count                  = 7;
}

message ListAll {
   string    id           = 1;
   string    datadomain   = 2;  
   string    name         = 3;
   string    description  = 4;
   string    type         = 5;
   string    version      = 6;
   string    key          = 7;       
   string    created_at   = 8;
}

//listResponse - Response for List Datasource
message listResponse {
   repeated ListAll list_all_datasources = 1;
   int64 count = 2;
}

//deleteRequest - Request for Delete Datasource
message deleteRequest {
   repeated string id = 1;
   bool isDeleteAll   = 2;
}

//deleteResponse - Response for delete datasource 
message deleteResponse {
   string statusCode  = 1;
   string message     = 2;
}

//logRequest - Request for datasource log
message logRequest {
   string datasource       = 1;
   string database         = 2;
   string table            = 3;
   repeated string columns = 4; 
}

//datasource log Response Structure 
message datasourceLogResponseStruct {
   string datasource        = 1;
   string database          = 2;
   string table             = 3;
   string column            = 4; 
   repeated string tags     = 5;
   repeated string classes  = 6;
   string lastScanTime      = 7; 
}

//logResponse - Response for log datasource
message logResponse {
   repeated datasourceLogResponseStruct datasourceLog = 1;
}

//scanRequest - Request for scan datasource
message scanRequest  {
   string name = 1;
}

//scanResponse - Response for scan datasource
message scanResponse  {
   string statusCode  = 1;
   string message     = 2;
}

//applyPolicyRequest - Request for Recommended Policy 
message applyPolicyRequest {
   repeated int64 Id  = 1;
   string dsName      = 2;
}

//applyPolicyResponse - Response for Recommended Policy 
message applyPolicyResponse {
   string statusCode  = 1;
   string message     = 2;
}

//statusRequest - Request to get status 
message statusRequest {
   string dsName  = 1;
}

//statusResponse - Response for the status
message statusResponse {
   string statusCode  = 1;
   string dsStatus    = 2;
}

//recommendedpolicyRequest - Request for the Recommended Policy 
message recommendedpolicyRequest {
   string dsName  = 1;
}

//recommendedpolicyResponse - Response for the Recommended Policy 
message recommendedpolicyResponse {
   string statusCode                       = 1;
   repeated recommendedPolicyStruct policy = 2;
}

//recommendedPolicyStruct - Define Struc for Recommended Policy 
message recommendedPolicyStruct {
   int32 policyId    = 1;
   string policyName = 2;
}